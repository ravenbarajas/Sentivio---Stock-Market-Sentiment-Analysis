{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\StockSentimentAnalysis\\\\frontend\\\\src\\\\components\\\\EnhancedStockChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent, Button, Input, Badge, Chart, StatisticsCard, Header, ThemeProvider } from './ui';\nimport './EnhancedStockChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnhancedStockChart = () => {\n  _s();\n  var _calculatePriceChange, _calculatePriceChange2, _calculatePriceChange3;\n  const [symbol, setSymbol] = useState('');\n  const [marketData, setMarketData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [timeframe, setTimeframe] = useState('1m'); // 1d, 1w, 1m, 3m, 1y\n  const chartRef = useRef(null);\n\n  // Popular stocks for quick selection\n  const popularStocks = [{\n    symbol: 'AAPL',\n    name: 'Apple'\n  }, {\n    symbol: 'MSFT',\n    name: 'Microsoft'\n  }, {\n    symbol: 'GOOGL',\n    name: 'Google'\n  }, {\n    symbol: 'AMZN',\n    name: 'Amazon'\n  }, {\n    symbol: 'TSLA',\n    name: 'Tesla'\n  }, {\n    symbol: 'META',\n    name: 'Meta'\n  }, {\n    symbol: 'NFLX',\n    name: 'Netflix'\n  }, {\n    symbol: 'NVDA',\n    name: 'NVIDIA'\n  }];\n  const handleSubmit = async e => {\n    if (e) e.preventDefault();\n    if (!symbol.trim()) {\n      setError('Please enter a stock symbol');\n      return;\n    }\n    fetchStockData(symbol);\n  };\n  const fetchStockData = async stockSymbol => {\n    if (!stockSymbol.trim()) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`/api/stock-data/${stockSymbol.toUpperCase()}`);\n      setMarketData(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error fetching stock data:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to fetch stock data');\n      setMarketData(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleQuickSelect = stockSymbol => {\n    setSymbol(stockSymbol);\n    fetchStockData(stockSymbol);\n  };\n  const calculatePriceChange = () => {\n    if (!marketData || !marketData.data || marketData.data.length < 2) return null;\n    const latestPrice = parseFloat(marketData.data[marketData.data.length - 1].close);\n    const firstPrice = parseFloat(marketData.data[0].close);\n    const change = latestPrice - firstPrice;\n    const percentChange = change / firstPrice * 100;\n    return {\n      change,\n      percentChange,\n      isPositive: change >= 0\n    };\n  };\n\n  // Create gradient fills for chart datasets\n  const createGradient = (ctx, chartArea, colorStart, colorEnd, alpha = 0.5) => {\n    if (!ctx || !chartArea) return null;\n    const gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n    gradient.addColorStop(0, `rgba(${colorStart}, 0)`);\n    gradient.addColorStop(1, `rgba(${colorEnd}, ${alpha})`);\n    return gradient;\n  };\n\n  // Prepare chart data with gradient fills and enhanced styling\n  const prepareChartData = () => {\n    if (!marketData || !marketData.data || !marketData.data.length) return null;\n\n    // Get chart context for gradients\n    const chart = chartRef.current;\n    let ctx,\n      chartArea,\n      gradients = {};\n    if (chart) {\n      ctx = chart.ctx;\n      chartArea = chart.chartArea;\n\n      // Create gradients for each dataset\n      gradients = {\n        close: createGradient(ctx, chartArea, '59, 130, 246', '59, 130, 246', 0.4),\n        open: createGradient(ctx, chartArea, '16, 185, 129', '16, 185, 129', 0.4),\n        high: createGradient(ctx, chartArea, '249, 115, 22', '249, 115, 22', 0.4),\n        low: createGradient(ctx, chartArea, '236, 72, 153', '236, 72, 153', 0.4)\n      };\n    }\n    return {\n      labels: marketData.data.map(item => item.date),\n      datasets: [{\n        label: 'Close Price',\n        data: marketData.data.map(item => item.close),\n        borderColor: 'var(--chart-primary)',\n        backgroundColor: gradients.close || 'var(--chart-primary-transparent)',\n        borderWidth: 2,\n        pointRadius: 1,\n        pointHoverRadius: 5,\n        tension: 0.3,\n        fill: true\n      }, {\n        label: 'Open Price',\n        data: marketData.data.map(item => item.open),\n        borderColor: 'var(--chart-secondary)',\n        backgroundColor: gradients.open || 'var(--chart-secondary-transparent)',\n        borderWidth: 2,\n        pointRadius: 1,\n        pointHoverRadius: 5,\n        tension: 0.3,\n        fill: true\n      }, {\n        label: 'High',\n        data: marketData.data.map(item => item.high),\n        borderColor: 'var(--chart-tertiary)',\n        backgroundColor: gradients.high || 'var(--chart-tertiary-transparent)',\n        borderWidth: 2,\n        pointRadius: 0,\n        pointHoverRadius: 5,\n        tension: 0.3,\n        fill: false,\n        hidden: true\n      }, {\n        label: 'Low',\n        data: marketData.data.map(item => item.low),\n        borderColor: 'var(--chart-quaternary)',\n        backgroundColor: gradients.low || 'var(--chart-quaternary-transparent)',\n        borderWidth: 2,\n        pointRadius: 0,\n        pointHoverRadius: 5,\n        tension: 0.3,\n        fill: false,\n        hidden: true\n      }]\n    };\n  };\n\n  // Chart options with enhanced styling and theming\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          usePointStyle: true,\n          pointStyleWidth: 10\n        }\n      },\n      title: {\n        display: true,\n        text: marketData ? `${marketData.symbol} Price History` : 'Stock Price History',\n        font: {\n          size: 16,\n          weight: 'bold'\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y || 0;\n            return `${label}: $${value.toFixed(2)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        title: {\n          display: true,\n          text: 'Price ($)'\n        },\n        ticks: {\n          callback: function (value) {\n            return '$' + value.toFixed(2);\n          }\n        },\n        grid: {\n          drawBorder: false\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Date'\n        },\n        grid: {\n          display: false\n        }\n      }\n    }\n  };\n\n  // Generate data for statistics cards\n  const getStatisticData = () => {\n    if (!marketData || !marketData.data || !marketData.data.length) return [];\n    const priceChange = calculatePriceChange();\n    const latestData = marketData.data[marketData.data.length - 1];\n    const prices = marketData.data.map(item => parseFloat(item.close));\n    return [{\n      title: 'Current Price',\n      value: `${parseFloat(latestData.close).toFixed(2)}`,\n      unit: '$',\n      change: priceChange ? priceChange.percentChange : 0,\n      timeframe: 'period change',\n      chartData: {\n        labels: marketData.data.map(item => item.date),\n        datasets: [{\n          data: marketData.data.map(item => item.close),\n          borderColor: 'var(--chart-primary)',\n          backgroundColor: 'var(--chart-primary-transparent)',\n          fill: true,\n          borderWidth: 2,\n          tension: 0.4\n        }]\n      }\n    }, {\n      title: 'Trading Volume',\n      value: `${Number(latestData.volume).toLocaleString()}`,\n      description: 'Latest trading day'\n    }, {\n      title: 'High / Low',\n      value: `${parseFloat(latestData.high).toFixed(2)} / ${parseFloat(latestData.low).toFixed(2)}`,\n      unit: '$',\n      description: 'Latest trading day'\n    }, {\n      title: 'Open Price',\n      value: `${parseFloat(latestData.open).toFixed(2)}`,\n      unit: '$',\n      description: 'Latest trading day'\n    }];\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"enhanced-stock-chart\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Stock Market Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"enhanced-stock-content\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"search-card\",\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              children: \"Stock Market Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n              children: \"Enter a stock symbol to view historical market data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              className: \"search-form\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                placeholder: \"Enter stock symbol (e.g., AAPL)\",\n                value: symbol,\n                onChange: e => setSymbol(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                disabled: loading,\n                children: loading ? 'Loading...' : 'Get Data'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeframe-selector\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timeframe-label\",\n                children: \"Timeframe:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), ['1d', '1w', '1m', '3m', '1y'].map(tf => /*#__PURE__*/_jsxDEV(Button, {\n                size: \"sm\",\n                variant: timeframe === tf ? 'default' : 'outline',\n                onClick: () => setTimeframe(tf),\n                children: tf\n              }, tf, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"popular-stocks\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"popular-stocks-label\",\n                children: \"Popular Stocks:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"popular-stocks-buttons\",\n                children: popularStocks.map(stock => /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline\",\n                  size: \"sm\",\n                  onClick: () => handleQuickSelect(stock.symbol),\n                  disabled: loading,\n                  children: stock.name\n                }, stock.symbol, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), marketData && marketData.data && marketData.data.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-section\",\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                    children: [marketData.symbol, \" \", marketData.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n                    children: \"Historical price data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                  variant: (_calculatePriceChange = calculatePriceChange()) !== null && _calculatePriceChange !== void 0 && _calculatePriceChange.isPositive ? 'default' : 'destructive',\n                  children: [(_calculatePriceChange2 = calculatePriceChange()) !== null && _calculatePriceChange2 !== void 0 && _calculatePriceChange2.isPositive ? '↑' : '↓', \" \", Math.abs((_calculatePriceChange3 = calculatePriceChange()) === null || _calculatePriceChange3 === void 0 ? void 0 : _calculatePriceChange3.percentChange).toFixed(2), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stock-chart-container\",\n                children: /*#__PURE__*/_jsxDEV(Chart, {\n                  ref: chartRef,\n                  type: \"line\",\n                  data: prepareChartData(),\n                  options: chartOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"statistics-section\",\n            children: getStatisticData().map((stat, index) => /*#__PURE__*/_jsxDEV(StatisticsCard, {\n              title: stat.title,\n              value: stat.value,\n              unit: stat.unit,\n              change: stat.change,\n              timeframe: stat.timeframe,\n              description: stat.description,\n              chartData: stat.chartData\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n};\n_s(EnhancedStockChart, \"WMvL3COUrnHbD1SDpVL8RE2ixYo=\");\n_c = EnhancedStockChart;\nexport default EnhancedStockChart;\nvar _c;\n$RefreshReg$(_c, \"EnhancedStockChart\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Card","CardHeader","CardTitle","CardDescription","CardContent","Button","Input","Badge","Chart","StatisticsCard","Header","ThemeProvider","jsxDEV","_jsxDEV","EnhancedStockChart","_s","_calculatePriceChange","_calculatePriceChange2","_calculatePriceChange3","symbol","setSymbol","marketData","setMarketData","loading","setLoading","error","setError","timeframe","setTimeframe","chartRef","popularStocks","name","handleSubmit","e","preventDefault","trim","fetchStockData","stockSymbol","response","get","toUpperCase","data","err","_err$response","_err$response$data","console","handleQuickSelect","calculatePriceChange","length","latestPrice","parseFloat","close","firstPrice","change","percentChange","isPositive","createGradient","ctx","chartArea","colorStart","colorEnd","alpha","gradient","createLinearGradient","bottom","top","addColorStop","prepareChartData","chart","current","gradients","open","high","low","labels","map","item","date","datasets","label","borderColor","backgroundColor","borderWidth","pointRadius","pointHoverRadius","tension","fill","hidden","chartOptions","responsive","maintainAspectRatio","interaction","mode","intersect","plugins","legend","position","usePointStyle","pointStyleWidth","title","display","text","font","size","weight","tooltip","callbacks","context","dataset","value","parsed","y","toFixed","scales","ticks","callback","grid","drawBorder","x","getStatisticData","priceChange","latestData","prices","unit","chartData","Number","volume","toLocaleString","description","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","disabled","tf","variant","onClick","stock","Math","abs","ref","options","stat","index","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/StockSentimentAnalysis/frontend/src/components/EnhancedStockChart.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardDescription,\r\n  CardContent,\r\n  Button,\r\n  Input,\r\n  Badge,\r\n  Chart,\r\n  StatisticsCard,\r\n  Header,\r\n  ThemeProvider\r\n} from './ui';\r\nimport './EnhancedStockChart.css';\r\n\r\nconst EnhancedStockChart = () => {\r\n  const [symbol, setSymbol] = useState('');\r\n  const [marketData, setMarketData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [timeframe, setTimeframe] = useState('1m'); // 1d, 1w, 1m, 3m, 1y\r\n  const chartRef = useRef(null);\r\n  \r\n  // Popular stocks for quick selection\r\n  const popularStocks = [\r\n    { symbol: 'AAPL', name: 'Apple' },\r\n    { symbol: 'MSFT', name: 'Microsoft' },\r\n    { symbol: 'GOOGL', name: 'Google' },\r\n    { symbol: 'AMZN', name: 'Amazon' },\r\n    { symbol: 'TSLA', name: 'Tesla' },\r\n    { symbol: 'META', name: 'Meta' },\r\n    { symbol: 'NFLX', name: 'Netflix' },\r\n    { symbol: 'NVDA', name: 'NVIDIA' },\r\n  ];\r\n\r\n  const handleSubmit = async (e) => {\r\n    if (e) e.preventDefault();\r\n    \r\n    if (!symbol.trim()) {\r\n      setError('Please enter a stock symbol');\r\n      return;\r\n    }\r\n\r\n    fetchStockData(symbol);\r\n  };\r\n\r\n  const fetchStockData = async (stockSymbol) => {\r\n    if (!stockSymbol.trim()) return;\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await axios.get(`/api/stock-data/${stockSymbol.toUpperCase()}`);\r\n      setMarketData(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching stock data:', err);\r\n      setError(err.response?.data?.error || 'Failed to fetch stock data');\r\n      setMarketData(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleQuickSelect = (stockSymbol) => {\r\n    setSymbol(stockSymbol);\r\n    fetchStockData(stockSymbol);\r\n  };\r\n\r\n  const calculatePriceChange = () => {\r\n    if (!marketData || !marketData.data || marketData.data.length < 2) return null;\r\n    \r\n    const latestPrice = parseFloat(marketData.data[marketData.data.length - 1].close);\r\n    const firstPrice = parseFloat(marketData.data[0].close);\r\n    \r\n    const change = latestPrice - firstPrice;\r\n    const percentChange = (change / firstPrice) * 100;\r\n    \r\n    return {\r\n      change,\r\n      percentChange,\r\n      isPositive: change >= 0\r\n    };\r\n  };\r\n\r\n  // Create gradient fills for chart datasets\r\n  const createGradient = (ctx, chartArea, colorStart, colorEnd, alpha = 0.5) => {\r\n    if (!ctx || !chartArea) return null;\r\n    \r\n    const gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\r\n    gradient.addColorStop(0, `rgba(${colorStart}, 0)`);\r\n    gradient.addColorStop(1, `rgba(${colorEnd}, ${alpha})`);\r\n    \r\n    return gradient;\r\n  };\r\n\r\n  // Prepare chart data with gradient fills and enhanced styling\r\n  const prepareChartData = () => {\r\n    if (!marketData || !marketData.data || !marketData.data.length) return null;\r\n    \r\n    // Get chart context for gradients\r\n    const chart = chartRef.current;\r\n    let ctx, chartArea, gradients = {};\r\n    \r\n    if (chart) {\r\n      ctx = chart.ctx;\r\n      chartArea = chart.chartArea;\r\n      \r\n      // Create gradients for each dataset\r\n      gradients = {\r\n        close: createGradient(ctx, chartArea, '59, 130, 246', '59, 130, 246', 0.4),\r\n        open: createGradient(ctx, chartArea, '16, 185, 129', '16, 185, 129', 0.4),\r\n        high: createGradient(ctx, chartArea, '249, 115, 22', '249, 115, 22', 0.4),\r\n        low: createGradient(ctx, chartArea, '236, 72, 153', '236, 72, 153', 0.4)\r\n      };\r\n    }\r\n    \r\n    return {\r\n      labels: marketData.data.map(item => item.date),\r\n      datasets: [\r\n        {\r\n          label: 'Close Price',\r\n          data: marketData.data.map(item => item.close),\r\n          borderColor: 'var(--chart-primary)',\r\n          backgroundColor: gradients.close || 'var(--chart-primary-transparent)',\r\n          borderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHoverRadius: 5,\r\n          tension: 0.3,\r\n          fill: true,\r\n        },\r\n        {\r\n          label: 'Open Price',\r\n          data: marketData.data.map(item => item.open),\r\n          borderColor: 'var(--chart-secondary)',\r\n          backgroundColor: gradients.open || 'var(--chart-secondary-transparent)',\r\n          borderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHoverRadius: 5,\r\n          tension: 0.3,\r\n          fill: true,\r\n        },\r\n        {\r\n          label: 'High',\r\n          data: marketData.data.map(item => item.high),\r\n          borderColor: 'var(--chart-tertiary)',\r\n          backgroundColor: gradients.high || 'var(--chart-tertiary-transparent)',\r\n          borderWidth: 2,\r\n          pointRadius: 0,\r\n          pointHoverRadius: 5,\r\n          tension: 0.3,\r\n          fill: false,\r\n          hidden: true\r\n        },\r\n        {\r\n          label: 'Low',\r\n          data: marketData.data.map(item => item.low),\r\n          borderColor: 'var(--chart-quaternary)',\r\n          backgroundColor: gradients.low || 'var(--chart-quaternary-transparent)',\r\n          borderWidth: 2,\r\n          pointRadius: 0,\r\n          pointHoverRadius: 5,\r\n          tension: 0.3,\r\n          fill: false,\r\n          hidden: true\r\n        }\r\n      ],\r\n    };\r\n  };\r\n\r\n  // Chart options with enhanced styling and theming\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    interaction: {\r\n      mode: 'index',\r\n      intersect: false,\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          usePointStyle: true,\r\n          pointStyleWidth: 10,\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: marketData ? `${marketData.symbol} Price History` : 'Stock Price History',\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold'\r\n        }\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(context) {\r\n            const label = context.dataset.label || '';\r\n            const value = context.parsed.y || 0;\r\n            return `${label}: $${value.toFixed(2)}`;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'Price ($)'\r\n        },\r\n        ticks: {\r\n          callback: function(value) {\r\n            return '$' + value.toFixed(2);\r\n          }\r\n        },\r\n        grid: {\r\n          drawBorder: false,\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Date'\r\n        },\r\n        grid: {\r\n          display: false,\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Generate data for statistics cards\r\n  const getStatisticData = () => {\r\n    if (!marketData || !marketData.data || !marketData.data.length) return [];\r\n    \r\n    const priceChange = calculatePriceChange();\r\n    const latestData = marketData.data[marketData.data.length - 1];\r\n    const prices = marketData.data.map(item => parseFloat(item.close));\r\n    \r\n    return [\r\n      {\r\n        title: 'Current Price',\r\n        value: `${parseFloat(latestData.close).toFixed(2)}`,\r\n        unit: '$',\r\n        change: priceChange ? priceChange.percentChange : 0,\r\n        timeframe: 'period change',\r\n        chartData: {\r\n          labels: marketData.data.map(item => item.date),\r\n          datasets: [{\r\n            data: marketData.data.map(item => item.close),\r\n            borderColor: 'var(--chart-primary)',\r\n            backgroundColor: 'var(--chart-primary-transparent)',\r\n            fill: true,\r\n            borderWidth: 2,\r\n            tension: 0.4,\r\n          }]\r\n        }\r\n      },\r\n      {\r\n        title: 'Trading Volume',\r\n        value: `${Number(latestData.volume).toLocaleString()}`,\r\n        description: 'Latest trading day',\r\n      },\r\n      {\r\n        title: 'High / Low',\r\n        value: `${parseFloat(latestData.high).toFixed(2)} / ${parseFloat(latestData.low).toFixed(2)}`,\r\n        unit: '$',\r\n        description: 'Latest trading day',\r\n      },\r\n      {\r\n        title: 'Open Price',\r\n        value: `${parseFloat(latestData.open).toFixed(2)}`,\r\n        unit: '$',\r\n        description: 'Latest trading day',\r\n      }\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      <div className=\"enhanced-stock-chart\">\r\n        <Header title=\"Stock Market Analytics\" />\r\n        \r\n        <div className=\"enhanced-stock-content\">\r\n          <Card className=\"search-card\">\r\n            <CardHeader>\r\n              <CardTitle>Stock Market Data</CardTitle>\r\n              <CardDescription>Enter a stock symbol to view historical market data</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <form onSubmit={handleSubmit} className=\"search-form\">\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter stock symbol (e.g., AAPL)\"\r\n                  value={symbol}\r\n                  onChange={(e) => setSymbol(e.target.value)}\r\n                />\r\n                <Button \r\n                  type=\"submit\" \r\n                  disabled={loading}\r\n                >\r\n                  {loading ? 'Loading...' : 'Get Data'}\r\n                </Button>\r\n              </form>\r\n              \r\n              <div className=\"timeframe-selector\">\r\n                <span className=\"timeframe-label\">Timeframe:</span>\r\n                {['1d', '1w', '1m', '3m', '1y'].map(tf => (\r\n                  <Button\r\n                    key={tf}\r\n                    size=\"sm\"\r\n                    variant={timeframe === tf ? 'default' : 'outline'}\r\n                    onClick={() => setTimeframe(tf)}\r\n                  >\r\n                    {tf}\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"popular-stocks\">\r\n                <div className=\"popular-stocks-label\">Popular Stocks:</div>\r\n                <div className=\"popular-stocks-buttons\">\r\n                  {popularStocks.map(stock => (\r\n                    <Button \r\n                      key={stock.symbol}\r\n                      variant=\"outline\"\r\n                      size=\"sm\"\r\n                      onClick={() => handleQuickSelect(stock.symbol)}\r\n                      disabled={loading}\r\n                    >\r\n                      {stock.name}\r\n                    </Button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {error && (\r\n                <div className=\"error-message\">\r\n                  {error}\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {marketData && marketData.data && marketData.data.length > 0 && (\r\n            <div className=\"chart-section\">\r\n              <Card className=\"chart-card\">\r\n                <CardHeader>\r\n                  <div className=\"chart-header\">\r\n                    <div>\r\n                      <CardTitle>\r\n                        {marketData.symbol} {marketData.name}\r\n                      </CardTitle>\r\n                      <CardDescription>\r\n                        Historical price data\r\n                      </CardDescription>\r\n                    </div>\r\n                    <Badge variant={calculatePriceChange()?.isPositive ? 'default' : 'destructive'}>\r\n                      {calculatePriceChange()?.isPositive ? '↑' : '↓'} {Math.abs(calculatePriceChange()?.percentChange).toFixed(2)}%\r\n                    </Badge>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"stock-chart-container\">\r\n                    <Chart\r\n                      ref={chartRef}\r\n                      type=\"line\"\r\n                      data={prepareChartData()}\r\n                      options={chartOptions}\r\n                    />\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n              \r\n              <div className=\"statistics-section\">\r\n                {getStatisticData().map((stat, index) => (\r\n                  <StatisticsCard\r\n                    key={index}\r\n                    title={stat.title}\r\n                    value={stat.value}\r\n                    unit={stat.unit}\r\n                    change={stat.change}\r\n                    timeframe={stat.timeframe}\r\n                    description={stat.description}\r\n                    chartData={stat.chartData}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default EnhancedStockChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}